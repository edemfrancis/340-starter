CREATE TYPE public.account_type AS ENUM ('Client', 'EMployee', 'Admin');
ALTER TYPE public.account_type OWNER TO cse340_vp64_user;
-- Table structure for table classification
CREATE TABLE public.classification (
	classification_id INT GENERATED BY DEFAULT AS IDENTITY,
	classification_name CHARACTER VARYING NOT NULL,
	CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);
-- TAble strut=cture for table Inventory
CREATE TABLE IF NOT EXISTS public.inventory (
	inv_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	inv_make CHARACTER VARYING NOT NULL,
	inv_model CHARACTER VARYING NOT NULL,
	inv_year CHARACTER(4) NOT NULL,
	inv_description text NOT NULL,
	inv_image CHARACTER VARYING NOT NULL,
	inv_thumbnail CHARACTER VARYING NOT NULL,
	inv_price NUMERIC(9, 0) NOT NULL,
	inv_miles INTEGER NOT NULL,
	inv_color CHARACTER VARYING NOT NULL,
	classification_id INTEGER NOT NULL,
	CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);
-- Create relationship between  CLASSIFICATION and INVENTORY Tables 
ALTER TABLE IF EXISTS public.inventory
ADD CONSTRAINT fk_classification FOREIGN KEY (classification_id) REFERENCES public.classification (classification_id) MATCH SIMPLE ON UPDATE CASCADE ON DELETE NO ACTION;
-- Table structure for table `Account`
CREATE TABLE IF NOT EXISTS public.account (
	account_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	account_firstname CHARACTER VARYING NOT NULL,
	account_lastname CHARACTER VARYING NOT NULL,
	account_email CHARACTER VARYING NOT NULL,
	account_password CHARACTER VARYING NOT NULL,
	account_type account_type NOT NULL DEFAULT 'Client'::account_type,
	CONSTRAINT account_pkey PRIMARY KEY (account_id)
);
-- Data for table `Classification`
INSERT INTO public.classification (classification_name)
VALUES ('Custom'),
	('Sport'),
	('Suv'),
	('Truck'),
	('Sedan');
-- Table structure for table `Message`
CREATE TABLE IF NOT EXISTS public.message (
	message_id integer NOT NULL GENERATED ALWAYS AS IDENTITY (
		INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1
	),
	message_to integer NOT NULL,
	message_from integer NOT NULL,
	message_subject character varying COLLATE pg_catalog."default" NOT NULL,
	message_body text COLLATE pg_catalog."default" NOT NULL,
	message_created timestamp with time zone NOT NULL DEFAULT now(),
	message_read boolean NOT NULL DEFAULT false,
	message_archived boolean NOT NULL DEFAULT false,
	CONSTRAINT message_pkey PRIMARY KEY (message_id)
);
-- Create relationship between columns 'message_to' and 'account_id'
ALTER TABLE IF EXISTS public.message
ADD CONSTRAINT message_to_fk FOREIGN KEY (message_to) REFERENCES public.account (account_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;
-- Create relationship between columns 'message_from' and 'account_id'
ALTER TABLE IF EXISTS public.message
ADD CONSTRAINT message_from_fk FOREIGN KEY (message_from) REFERENCES public.account (account_id) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION NOT VALID;